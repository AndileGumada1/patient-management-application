from django.contrib import messages
from django.shortcuts import render, redirect
from django.http import HttpResponse

# Create your views here.
from commoninfo.models import UserInfo



def addUserInfo(request):

    if request.method == "POST":
         username = request.POST['username']
         email = request.POST['email']
         password1 = request.POST['password1']
         password2 = request.POST['password2']
         firstname = request.POST['firstname']
         lastname = request.POST['lastname']
         unique_id = request.POST['unique_id']
         dateOfBirth = request.POST['dateOfBirth']
         user = UserInfo.objects.create_user(username = username, password = password1, email =email, firstname = firstname, lastname = lastname, unique_id = unique_id, dateOfBirth=dateOfBirth)
         user.save()
         print("user created")
         return redirect('/')
         messages.success(request, 'successfully added! .')

    else:
        return render(request, 'commoninfo/register.html')

def fetchUserInfo(request):

    context = {
    'object' : obj
    'username': obj.username,
    'unique_id': obj.unique_id,
    'dateOfBirth': obj.dateOfBirth
 
    }
    return render(request, 'commoninfo/fetch.html', context)


def commoninfo(request):
    return render(request, 'commoninfo/base.html')

Base Tamplate
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    <title>base</title>
</head>
<body>
 <div class="container">
      <div class="row justify-content-center">
        <div class="col-8">
          <h1 class="mt-2">Patient Management Application</h1>
          <hr class="mt-0 mb-4">
          <button>Register</button> 
          <button>Check </button>

          {% block content %}
          {% endblock %}
        </div>

      </div>
    </div>
</body>
</html>

fetch template

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    <title>fetch</title>
</head>
<body>
<div class="col-md-6" align="centre-content">
        <h1>From Fetch Page</h1>
        <form action="fetch" method="GET" >

            <input type="text" name="uniqueid" class="form-control" placeholder="please enter your uniqueID">
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
        
        <p>{{object.username}}</p>
        <p>{{object.uniqueid}}</p>
        <p>{{object.dataOfBirth}}</p>

</div>
</body>
</html>

Register Template
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    <title>registration</title>
</head>
<div class="row mb-3" >
    
<body>

    <div class="panel-heading" align="content">
            <h1>Registration Page</h1>    
    </div>
    <form action="add" method="post">
            {%csrf_token %}
        {% if messages %}
        {% for message in messages %}
        <p class="alert alert-info">{{ message }}</p>

        {% endfor %}
        {% endif %}
        <div class="form-group">
        <input type="text" name="username" placeholder="Username" class="form-control input-sm"><br>
        </div>

        <div class="form-group">
        <input type="text" name="email" id="email" placeholder="Email address" class="form-control input-sm"><br>
        </div>

        <div class="form-group">
        <input type="text" name="password1" placeholder="password" class="form-control input-sm"><br>
        </div>

        <div class="form-group">
        <input type="text" name="password2" placeholder="Re-enter password" class="form-control input-sm"><br>

        <div class="form-group">
        <input type="text" name="firstname" placeholder="First Name" class="form-control input-sm"><br>

        <div class="form-group">
        <input type="text" name="lastname" placeholder="Last Name" class="form-control input-sm"><br>
        </div>

        <div class="form-group">
        <input type="text" name="uniqueid" placeholder="Unique ID" class="form-control input-sm"><br>
        </div>

        <div class="form-group">
        <input type="text" name="dateofbirth" placeholder=" Date OF Birth" class="form-control input-sm"><br>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>

    </body>
</div>
</html>

URLS
from django.urls import path
from . import views

urlpatterns =[
    path('commoninfo/add', views.addUserInfo),
    path('commoninfo/fetch', views.fetchUserInfo),
    path('commoninfo', views.commoninfo)
]

URLS
"""patient_management_app URL Configuration

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/3.1/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path, include


urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('commoninfo.urls'))
]


Models
from django.contrib.auth.models import AbstractUser
from django.db import models

# Create your models here.


class UserInfo(AbstractUser):
        user_name       = models.CharField(max_length=130)
        email           = models.EmailField(blank=True)
        password        = models.CharField(max_length=130)
        re_type         = models.CharField(max_length=130)
        first_name      = models.CharField(max_length=130)
        last_login      = models.CharField(max_length=130)
        uniqueID        = models.IntegerField(null=True)
        dateOfbirth     = models.DateField(auto_now_add=True)
     


Admin
from django.contrib import admin
from commoninfo.models import UserInfo


admin.site.register(UserInfo)

Settings
"""
Django settings for patient_management_app project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&4!pi8p!f9dn2f_gie(0z2vr0g0*qwczkx$fb02rwjuz)22*m+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'commoninfo'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'patient_management_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'patient_management_app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'commoninfo. UserInfo'
AUTH_USER_MODEL = 'commoninfo.UserInfo'
